#!/usr/bin/env bash
# run a git command in each repository in the current directory

# set -eEuo pipefail
set -euo pipefail
trap 'echo "err ($?) at ($BASH_SOURCE:$LINENO): $BASH_COMMAND"' ERR

# shellcheck disable=SC2034
USAGE="[-h|--help] [-p|--print] -- COMMAND"
# shellcheck disable=SC2034
LONG_USAGE="Execute commands in child directory repositories

Options:

-h | --help         Print this help
-p | --print        Just print child directory repositories
"

# shellcheck disable=SC2034
NONGIT_OK=1
# shellcheck disable=SC2034
SUBDIRECTORY_OK=1
set +u # allow unset variables in git-sh-setup
# shellcheck disable=SC1091
. "$(git --exec-path)/git-sh-setup"
set -u # but then turn it back on

while [[ $# -gt 0 ]]; do
    arg="$1"
    shift
    case $arg in
        -h | --help)
            HELP=1
            ;;
        -p | --print)
            READY=1
            PRINT=1
            ;;
        --)
            # stop processing options; remaining arguments are subcommand
            READY=1
            break
            ;;
        *)
            echo "I don't understand '$arg'"
            HELP=1
            ;;
    esac
done

[[ -v HELP || ! -v READY ]] && usage

# https://stackoverflow.com/a/32981392
faketty()
{
    script -qefc "$(printf "%q " "$@")" /dev/null
}

failures=()
for item in */; do
    item=$(basename "$item")
    git -C "$item" in-repo || continue
    [[ -v PRINT ]] && {
        echo "$item"
        continue
    }
    pushd "$item" >&/dev/null
    {
        # faketty "$@" | sed -r "s/^/\x1b\[1m$item: \x1b[0m/"
        # faketty "$@" | sed -r -e 's/\x1b/\\e/g' -e 's/\r/(CR)/g' -e 's/\n/(LF)/g'
        # faketty "$@" | sed -r -e 's/\x1b/\\e/g' -e 's/\x0D/(CR)/g'
        # faketty "$@" | sed -r -e 's/\x1b/(ESC)/g' -e 's/\x0D(.)/(CR)\1/g'
        # faketty "$@" | sed -r -e 's/\x1b/(ESC)/g' -e 's/\x0D(.)/(CR)\1/g'
        # faketty "$@" | sed -r -e 's/\x0D(.)/(CR)\1/g'
        faketty "$@"
        retval=$?
    } || true
    popd >&/dev/null
    [[ $retval -ne 0 ]] && failures+=("$item")
done

if [[ ${#failures[@]} -gt 0 ]]; then
    echo "[X] Failures in: ${failures[*]}"
    exit 1
fi
